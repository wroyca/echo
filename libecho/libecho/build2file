source $src_root/build2/export/glib-compile-resources.build2

intf_libs = # Interface dependencies.
impl_libs = # Implementation dependencies.
pkgs_libs = # System-installed dependencies.

pkgs_libs += libadwaita%lib{adwaita-1}
pkgs_libs += libpeas%lib{peas-2}

./: lib{echo}: {hxx ixx txx cxx}{** -version -config -**.resource...} \
               {hxx            }{version config}                      \
               {            cxx}{echo.gresource.cxx}                   \
  $impl_libs $intf_libs $pkgs_libs

[rule_hint=version.in] hxx{version}: in{version} $src_root/manifest

# In-based rule for processing config.h.in files.
#
hxx{config}: in{config.hxx.in}
{
  gettext_package = $project
  package_version = $version

  # FIXME: gettext doesn't resolve properly.
  #
  localedir = ($install.root != [null]                   \
               ? $install.resolve($install.share)/locale \
               : $out_base/share/locale)
}

# Resource bundle.
#
cxx{echo.gresource.cxx}: xml{echo.gresource.xml} ui{**} css{**}

# Build options.
#
cxx.poptions =+ "-I$out_root" "-I$src_root"
cxx.poptions =+ "-DECHO_COMPILATION"
cxx.poptions =+ "-DECHO_DEVELOP=$config.libecho.develop"
cxx.poptions =+ "-DECHO_ENABLE_TRACE=$config.libecho.trace"

# Export options.
#
lib{echo}:
{
  cxx.export.poptions = "-I$out_root" "-I$src_root"
  cxx.export.libs = $intf_libs $pkgs_libs
}

# For pre-releases use the complete version to make sure they cannot
# be used in place of another pre-release or the final version. See
# the version module for details on the version.* variable values.
#
if $version.pre_release
  lib{echo}: bin.lib.version = "-$version.project_id"
else
  lib{echo}: bin.lib.version = "-$version.major.$version.minor"

# Install into the libecho/ subdirectory of, say, /usr/include/
# recreating subdirectories.
#
{h hxx}{*}:
{
  install         = include/libecho/
  install.subdirs = true
}
