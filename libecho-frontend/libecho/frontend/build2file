source $src_root/build2/export/glib-compile-resources.build2

intf_libs = # Interface dependencies.
impl_libs = # Implementation dependencies.
#import xxxx_libs += libhello%lib{hello}

libadwaita = libadwaita%lib{adwaita-1}
libpeas = libpeas%lib{peas-2}

lib{echo-frontend}: {hxx ixx txx cxx}{** -version -**.resource...} \
                    {hxx            }{version}                     \
                    {cxx            }{echo-frontend.resource...}   \
  $impl_libs $intf_libs $libadwaita $libpeas

hxx{version}: in{version} $src_root/manifest
cxx{echo-frontend.resource...}: xml{echo-frontend.resource...}

# Build options.
#
cxx.poptions =+ "-I$out_root" "-I$src_root"
cxx.poptions =+ "-DECHO_DEVELOP=$config.libecho_frontend.develop"

obja{*}: cxx.poptions += -DLIBECHO_FRONTEND_STATIC_BUILD
objs{*}: cxx.poptions += -DLIBECHO_FRONTEND_SHARED_BUILD

# Export options.
#
lib{echo-frontend}:
{
  cxx.export.poptions = "-I$out_root" "-I$src_root"
  cxx.export.libs = $intf_libs
}

liba{echo-frontend}: cxx.export.poptions += -DLIBECHO_FRONTEND_STATIC
libs{echo-frontend}: cxx.export.poptions += -DLIBECHO_FRONTEND_SHARED

# For pre-releases use the complete version to make sure they cannot
# be used in place of another pre-release or the final version. See
# the version module for details on the version.* variable values.
#
if $version.pre_release
  lib{echo-frontend}: bin.lib.version = "-$version.project_id"
else
  lib{echo-frontend}: bin.lib.version = "-$version.major.$version.minor"

# Install into the libecho/frontend/ subdirectory of, say, /usr/include/
# recreating subdirectories.
#
{hxx ixx txx}{*}:
{
  install         = include/libecho/frontend/
  install.subdirs = true
}
